export const CONFIGS = {
  FETCH_DATA: 'FETCH_DATA',
  UPDATA_FETCH_DATA: 'UPDATE_FETCH_DATA'
}
Object.freeze(CONFIGS)

export const AUTHEN = {
  GET: 'AUTHEN_GET',
  SAVE_DATA: 'AUTHEN_SAVE_DATA',
  LOGOUT: 'AUTHEN_LOGOUT'
}
Object.freeze(AUTHEN)

export const PATIENT = {
  GET: 'PATIENT_GET',
  EDIT: 'PATIENT_EDIT',
  ISLOADING: 'PATIENT_ISLOADING',
  ISLOADED: 'PATIENT_ISLOADED'
}
Object.freeze(PATIENT)

export const CHECKUP = {
  GETALL: 'GETALL_CHECKUP',
  LOADING: 'LOADING_CHECKUP',
  GET: 'GET_CHECKUP',
  GETCHECKUPHISTORY: 'GET_CHECKUP_HISTORY',
  GETCHECKUPHISTORYUNREAD: 'GET_CHECKUP_HISTORY_UNREAD',
  UPDATEREADINGCHECKUPHISTORY: 'CHECKUP_UPDATE_READING_HISTORY',
  GETCHECKUPHISTORYUNSETREADONLY: 'GET_CHECKUP_HISTORY_SET_UNREAD_ONLY'
}
Object.freeze(CHECKUP)

export const ERROR_MESSAGE = {
  ERR: 'ERR',
  CODE500: 500,
  CODE404: 404,
  CODE401: 401,
  CLEAR: 'CLEAR',
  NETWORKERROR: 'NETWORKERROR'
}
Object.freeze(ERROR_MESSAGE)

export const HEADER = {
  SET: 'HEADER_SET'
}
Object.freeze(HEADER)

export const NOTIFICATION = {
  GETSOCKET: 'GET_SOCKET'
}
Object.freeze(NOTIFICATION)

export const XRAY = {
  GET: 'GET_XRAY',
  LOADING: 'LOADING_XRAY',
  GETXRAYTRANSACTIONUNREAD: 'GET_XRAY_TRANSACTION_UNREAD',
  GETXRAYTRANSACTIONUNREADONLY: 'GET_XRAY_TRANSACTION_UNREAD_ONLY',
  GETXRAYTRANSACTION: 'GET_XRAY_TRANSACTION',
  UPDATEREADINGXRAYHISTORY: 'UPDATE_READING_XRAY_HISTORY'
}
Object.freeze(XRAY)

export const PERMISSION = {
  GET: 'GET_PERMISSION',
  GETSELECTED: 'GET_SELECETED_PERMISSION',
  GETUPDATED: 'GET_UPDATED_PERMISSION',
  GETUPDATEDLOADING: 'GET_UPDATED_LOADING_PERMISSION',
  GETUPDATEDCLEAR: 'GET_UPDATED_CLEAR_PERMISSION',
  SETDATAONREADING: 'SET_DATA_ON_READING_PERMISSION',
  SETDATAONREADINGLOADING: 'SET_DATA_ON_READING_LOADING_PERMISSION',
  LOADING: 'LOADING_PERMISSION',
  GETPERMISSIONTRANSACTIONUNREAD: 'GET_PERMISSION_TRANSACTION_UNREAD'
}
Object.freeze(PERMISSION)

export const HEALTHCARE = {
  GET: 'GETHEALTHCARE'
}
Object.freeze(HEALTHCARE)

export const REVOKEPROVIDER = {
  UPDATE: 'UPDATE_REVOKE_PROVIDER'
}
Object.freeze(REVOKEPROVIDER)
